---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include default variables
  include_vars: "../vars/main.yml"
  tags: cri_o

- name: include release specific variables
  include_vars: "{{ lookup('first_found', _params) }}"
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "../vars"
  ignore_errors: true
  tags: cri_o

- name: include release specific tasks
  include_tasks: "{{ lookup('first_found', _params) }}"
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "."
  ignore_errors: true
  tags: cri_o

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: "/etc/cni/net.d" }
    - { dest: "/etc/crio" }
    - { dest: "/etc/crio/crio.conf.d" }
    - { dest: "/etc/default" }
    - { dest: "/usr/lib/modules-load.d" }
    - { dest: "/usr/local/bin" }
    - { dest: "/usr/local/lib/systemd/system" }
    - { dest: "/usr/share/containers/oci/hooks.d" }
    - { dest: "/usr/share/oci-umount/oci-umount.d" }
    - { dest: "{{ cri_o_download.dest | dirname }}" }
  tags: cri_o

- name: tweak modeprobe entries
  lineinfile:
    path: "/usr/lib/modules-load.d/crio.conf"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp | default('^' + item.line | regex_escape() + '$') }}"
    state: "{{ item.state | default('present') }}"
    insertafter: "EOF"
    create: true
  loop: "{{ cri_o_modprobe }}"
  notify:
    - cri_o | systemctl restart systemd-modules-load
  tags: cri_o

- name: tweak sysctl entries
  sysctl:
    sysctl_file: "/etc/sysctl.conf"
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: "{{ item.state | default('present') }}"
    reload: false
  loop: "{{ cri_o_sysctl }}"
  notify:
    - cri_o | sysctl --system
  tags: cri_o

- name: download archive
  vars:
    ansible_python_interpreter: "python3"
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    checksum: "{{ item.checksum }}"
    timeout: 300
  loop:
    - "{{ cri_o_download }}"
  register: get_url_result
  until: get_url_result is succeeded
  tags: cri_o

- name: build package
  environment:
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  shell: |
    set -o pipefail
    TMP_DIR="$(mktemp -d)" \
      && tar -zx -C $TMP_DIR -f {{ cri_o_download.dest }} --strip-components=1 \
      && cd $TMP_DIR \
      && git clone --branch master --depth 1 https://github.com/cri-o/cri-o.git cri-o-master \
      && rm -rf nix \
      && mv cri-o-master/nix . \
      && rm -rf cri-o-master \
      && nix build -f nix/ \
      && chown -Rf root:root result*/bin/* \
      && chmod 0755 result*/bin/* \
      && for i in result*/bin/*; do mv "$i" "${i/-static/}"; done || true \
      && mv result*/bin/* /usr/local/bin/ \
      && make install.systemd \
      && rm -rf $TMP_DIR
  args:
    executable: "/bin/bash"
  when: get_url_result is changed
  register: result
  until: result is succeeded
  notify:
    - cri_o | systemctl daemon-reload
    - cri_o | systemctl restart crio
  tags: cri_o

- name: copy templates
  template:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { dest: "/etc/cni/net.d/10-crio-bridge.conf" }
    - { dest: "/etc/crio/crio.conf" }
    - { dest: "/etc/default/crio" }
    - { dest: "/usr/local/lib/systemd/system/crio.service" }
    - { dest: "/usr/share/oci-umount/oci-umount.d/crio-umount.conf" }
  notify:
    - cri_o | systemctl daemon-reload
    - cri_o | systemctl restart crio
  tags: cri_o

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/etc/cni/net.d/10-crio-bridge.conf" }
    - { dest: "/etc/crio/crio.conf" }
    - { dest: "/usr/lib/modules-load.d/crio.conf" }
    - { dest: "/usr/local/bin/crio", mode: "0755" }
    - { dest: "/usr/local/bin/crio-status", mode: "0755" }
    - { dest: "/usr/local/bin/pinns", mode: "0755" }
    - { dest: "/usr/local/lib/systemd/system/crio.service" }
    - { dest: "/usr/share/oci-umount/oci-umount.d/crio-umount.conf" }
  tags: cri_o

- name: systemctl start crio
  service:
    name: "crio"
    state: "started"
    enabled: true
  changed_when: false
  ignore_errors: true
  tags: cri_o

- name: flush handlers
  meta: flush_handlers
  tags: cri_o
